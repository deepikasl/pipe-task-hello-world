template: true
valuesFilePath: ./values.yml

resources:
  - name: hello_world_task_publish_gitrepo
    type: GitRepo
    configuration:
      path: {{ .Values.repoPath }}
      gitProvider: {{ .Values.gitIntegration }}
      branches:
        include: ^{{ .Values.mainBranch }}$
      cloneProtocol: https

pipelines:
  - name: hello_world_task_publish
    configuration:
      jfrogCliVersion: 2
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog/pipelines-u18node
            tag: "16"
            autoPull: true
      environmentVariables:
        readOnly:
          TASK_NAME: hello-world
          TASK_VERSION: 0.0.0
          TASK_REPOSITORY: pipelines-tasks-local
          RESOLVE_REPO: npm-virtual
    steps:
      - name: build_and_publish_task
        type: Bash
        configuration:
          inputResources:
            - name: hello_world_task_publish_gitrepo
              trigger: false
          integrations:
            - name: {{ .Values.artIntegration }}
        execution:
          onExecute:
            # Make sure version was provided
            - test -n "$TASK_VERSION" -a "$TASK_VERSION" != "0.0.0"

            - pushd $res_hello_world_task_publish_gitrepo_resourcePath
            # Configure JFrog CLI
            - jfrog npmc --repo-resolve $RESOLVE_REPO
            # Install npm dependencies
            - jfrog npm install
            # Build task runnable script bundled with dependencies
            - npm run dist
            - popd

            # Run publish task
            - task: jfrog/publish-task@v0.0.2
              id: publish-hello-world
              input:
                path: $res_hello_world_task_publish_gitrepo_resourcePath
                targetRepository: $TASK_REPOSITORY
                taskName: $TASK_NAME
                taskVersion: $TASK_VERSION
                includePattern: ^README.md$|^dist

      - name: test_published_task
        type: Bash
        configuration:
          inputSteps:
            - name: build_and_publish_task
          integrations:
            - name: {{ .Values.artIntegration }}
        execution:
          onExecute:
            # Run task
            - task: $TASK_NAME@v$TASK_VERSION
              id: hello_world_test
              input:
                name: "developer"

            # Check task output
            - echo "task output is $OUT_hello_world_test_greeting"
            # Check exported environment variable
            - echo "path to greeting file is $GREETING_FILE"
            # Check task generated file
            - cat ./greeting.txt
          onComplete:
            - echo "Step done!"
  - name: jira_comment_task_publish
    configuration:
      jfrogCliVersion: 2
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog/pipelines-u18node
            tag: "16"
            autoPull: true
      environmentVariables:
        readOnly:
          TASK_NAME: jira-comment
          TASK_VERSION: 0.0.${run_number}
          TASK_REPOSITORY: pipelines-tasks-local
          RESOLVE_REPO: npm-virtual
          JIRA_INT: deepikajira
    steps:
      - name: build_and_publish_task
        type: Bash
        configuration:
          inputResources:
            - name: hello_world_task_publish_gitrepo
              trigger: false
          integrations:
            - name: {{ .Values.artIntegration }}
        execution:
          onExecute:
            - pushd $res_hello_world_task_publish_gitrepo_resourcePath/tasks/$TASK_NAME/src
            - jfrog npmc --repo-resolve $RESOLVE_REPO
            - jfrog npm install
            - npm run dist
            - popd
            - mkdir $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            - cp -rf $res_hello_world_task_publish_gitrepo_resourcePath/tasks/$TASK_NAME/* $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            - echo "Task content" && ls -la $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            - task: jfrog/publish-task@v0.0.1
              id: publish-hello-world
              input:
                path: $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
                rtRepository: $TASK_REPOSITORY
                taskName: $TASK_NAME
                version: $TASK_VERSION

      - name: test_published_task
        type: Bash
        configuration:
          inputSteps:
            - name: build_and_publish_task
          integrations:
            - name: {{ .Values.artIntegration }}
            - name: deepikajira
        execution:
          onExecute:
            # Run task
            - task: $TASK_NAME@v$TASK_VERSION
              input:
                issue_key: "TAS-1"
                username: "$int_deepikajira_username"
                token: "$int_deepikajira_token"
                endpoint: "$int_deepikajira_url"
                comment: "Hi from run number $run_number, from step: $step_url"
  - name: jira_create_issue_task_publish
    configuration:
      jfrogCliVersion: 2
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog/pipelines-u18node
            tag: "16"
            autoPull: true
      environmentVariables:
        readOnly:
          TASK_NAME: jira-create-issue
          TASK_VERSION: 0.0.${run_number}
          TASK_REPOSITORY: pipelines-tasks-local
          RESOLVE_REPO: npm-virtual
          JIRA_INT: deepikajira
    steps:
      - name: build_and_publish_task
        type: Bash
        configuration:
          inputResources:
            - name: hello_world_task_publish_gitrepo
              trigger: false
          integrations:
            - name: {{ .Values.artIntegration }}
        execution:
          onExecute:
            - pushd $res_hello_world_task_publish_gitrepo_resourcePath/tasks/$TASK_NAME/src
            - jfrog npmc --repo-resolve $RESOLVE_REPO
            - jfrog npm install
            - npm run dist
            - popd
            - mkdir $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            - cp -rf $res_hello_world_task_publish_gitrepo_resourcePath/tasks/$TASK_NAME/* $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            - echo "Task content" && ls -la $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
            - task: jfrog/publish-task@v0.0.1
              id: publish-hello-world
              input:
                path: $JFROG_STEP_WORKSPACE_DIR/$TASK_NAME
                rtRepository: $TASK_REPOSITORY
                taskName: $TASK_NAME
                version: $TASK_VERSION

      - name: test_published_task
        type: Bash
        configuration:
          inputSteps:
            - name: build_and_publish_task
          integrations:
            - name: {{ .Values.artIntegration }}
            - name: deepikajira
        execution:
          onExecute:
            # Run task
            - echo "Do something"
            - echo "$int_$JIRA_INT_username"
            - task: $TASK_NAME@v$TASK_VERSION
              input:
                endpoint: "$int_deepikajira_url"
                summary: "Ticket from Run# $run_number"
                description: "Hi from run number $run_number, from step: $step_url"
                projectKey: "TAS"
                issueTypeId: "10002"
                username: "$int_deepikajira_username"
                token: "$int_deepikajira_token"